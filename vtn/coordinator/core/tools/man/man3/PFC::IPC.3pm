.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PFC::IPC 3"
.TH PFC::IPC 3 "2015-08-20" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PFC::IPC \- Define constants for IPC build tool.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use PFC::IPC;
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
The main purpose of this class is to provide constants for \s-1IPC\s0 build tool.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This section describes about public interface provided by \fB\s-1PFC::IPC\s0\fR.
.SS "\s-1IPC PDU TYPE\s0"
.IX Subsection "IPC PDU TYPE"
.IP "\fB\s-1IPCTYPE_INT8\s0\fR" 4
.IX Item "IPCTYPE_INT8"
\&\s-1IPC\s0 data \s-1PDU\s0 type for signed 8\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_INT8\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_UINT8\s0\fR" 4
.IX Item "IPCTYPE_UINT8"
\&\s-1IPC\s0 data \s-1PDU\s0 type for unsigned 8\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_UINT8\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_INT16\s0\fR" 4
.IX Item "IPCTYPE_INT16"
\&\s-1IPC\s0 data \s-1PDU\s0 type for signed 16\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_INT16\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_UINT16\s0\fR" 4
.IX Item "IPCTYPE_UINT16"
\&\s-1IPC\s0 data \s-1PDU\s0 type for unsigned 16\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_UINT16\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_INT32\s0\fR" 4
.IX Item "IPCTYPE_INT32"
\&\s-1IPC\s0 data \s-1PDU\s0 type for signed 32\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_INT32\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_UINT32\s0\fR" 4
.IX Item "IPCTYPE_UINT32"
\&\s-1IPC\s0 data \s-1PDU\s0 type for unsigned 32\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_UINT32\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_INT64\s0\fR" 4
.IX Item "IPCTYPE_INT64"
\&\s-1IPC\s0 data \s-1PDU\s0 type for signed 64\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_INT64\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_UINT64\s0\fR" 4
.IX Item "IPCTYPE_UINT64"
\&\s-1IPC\s0 data \s-1PDU\s0 type for unsigned 64\-bit integer.
This value is identical to \fB\s-1PFC_IPCTYPE_UINT64\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_FLOAT\s0\fR" 4
.IX Item "IPCTYPE_FLOAT"
\&\s-1IPC\s0 data \s-1PDU\s0 type for single precision floating point.
This value is identical to \fB\s-1PFC_IPCTYPE_FLOAT\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_DOUBLE\s0\fR" 4
.IX Item "IPCTYPE_DOUBLE"
\&\s-1IPC\s0 data \s-1PDU\s0 type for double precision floating point.
This value is identical to \fB\s-1PFC_IPCTYPE_DOUBLE\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_IPV4\s0\fR" 4
.IX Item "IPCTYPE_IPV4"
\&\s-1IPC\s0 data \s-1PDU\s0 type for IPv4 address.
This value is identical to \fB\s-1PFC_IPCTYPE_IPV4\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_IPV6\s0\fR" 4
.IX Item "IPCTYPE_IPV6"
\&\s-1IPC\s0 data \s-1PDU\s0 type for IPv6 address.
This value is identical to \fB\s-1PFC_IPCTYPE_IPV6\s0\fR defined in \fBpfc/ipc.h\fR.
.IP "\fB\s-1IPCTYPE_STRUCT\s0\fR" 4
.IX Item "IPCTYPE_STRUCT"
\&\s-1IPC\s0 data \s-1PDU\s0 type for user-defined structure.
This value is identical to \fB\s-1PFC_IPCTYPE_STRUCT\s0\fR defined in \fBpfc/ipc.h\fR.
.SS "\s-1FILE NAME\s0"
.IX Subsection "FILE NAME"
.IP "\fB\s-1INFO_DEFAULT\s0\fR" 4
.IX Item "INFO_DEFAULT"
Default file name to place \s-1IPC\s0 struct information.
.SS "\s-1BYTE ORDER MARK\s0"
.IX Subsection "BYTE ORDER MARK"
.IP "\fB\s-1IPC_ORDER_LITTLE\s0\fR" 4
.IX Item "IPC_ORDER_LITTLE"
Byte order mark which represents little endian.
.IP "\fB\s-1IPC_ORDER_BIG\s0\fR" 4
.IX Item "IPC_ORDER_BIG"
Byte order mark which represents big endian.
.SS "\s-1OTHERS\s0"
.IX Subsection "OTHERS"
.IP "\fB\s-1MAX_STRUCT_SIZE\s0\fR" 4
.IX Item "MAX_STRUCT_SIZE"
The limit of structure size.
.IP "\fB\s-1MAX_SYMBOL_LENGTH\s0\fR" 4
.IX Item "MAX_SYMBOL_LENGTH"
The limit of symbol name, such as struct and field name.
.IP "\fB\s-1MAX_INFO_OFFSET\s0\fR" 4
.IX Item "MAX_INFO_OFFSET"
The limit of file offset of \s-1IPC\s0 struct information file.
.IP "\fB\s-1TYPE_SUFFIX\s0\fR" 4
.IX Item "TYPE_SUFFIX"
Suffix of C language type for struct data.
.IP "\fB\s-1SIGNATURE_PREFIX\s0\fR" 4
.IX Item "SIGNATURE_PREFIX"
Prefix of C preprocessor constant name which defines struct signature.
.IP "\fB\s-1CXX_IMPORT_PREFIX\s0\fR" 4
.IX Item "CXX_IMPORT_PREFIX"
Prefix of C preprocessor constant name used to reject unexpected inclusion
of \s-1CXX\s0 accessor methods.
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\s-1NEC\s0 Corporation
